初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

使用命令git add <file>，注意，可反复多次使用，添加多个文件；

使用命令git commit -m <message>，完成。

git status命令可以让我们时刻掌握仓库当前的状态

如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard <commit_id>

git log可以查看提交历史

git reflog查看命令历史

git checkout -- file可以丢弃工作区的修改

git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区
查看分支：git branch

git status -s 简单模式查看状态，第一列本地库和缓存区的差异，第二列缓存区和工作目录的差异

git rm –cached “文件路径”，不删除物理文件，仅将该文件从缓存中删除；
git rm –f “文件路径”，不仅将该文件从缓存中删除，还会将物理文件删除（不会回收到垃圾桶）。

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug

修复后，再git stash pop，回到工作现场。
git stash list命令查看
git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除
git stash pop，恢复的同时把stash内容也删了

如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。

要查看远程库的信息，用git remote：

######
多人协作的工作模式通常是这样：

首先，可以试图用git push origin <branch-name>推送自己的修改；

如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

如果合并有冲突，则解决冲突，并在本地提交；

没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>
#####
#git add是将文件add到暂存区 commit是提交到版本库 
